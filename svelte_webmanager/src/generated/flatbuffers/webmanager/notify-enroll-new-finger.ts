// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

export class NotifyEnrollNewFinger {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):NotifyEnrollNewFinger {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsNotifyEnrollNewFinger(bb:flatbuffers.ByteBuffer, obj?:NotifyEnrollNewFinger):NotifyEnrollNewFinger {
  return (obj || new NotifyEnrollNewFinger()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsNotifyEnrollNewFinger(bb:flatbuffers.ByteBuffer, obj?:NotifyEnrollNewFinger):NotifyEnrollNewFinger {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new NotifyEnrollNewFinger()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

name():string|null
name(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
name(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

index():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readUint16(this.bb_pos + offset) : 0;
}

step():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readUint8(this.bb_pos + offset) : 0;
}

errorcode():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readUint16(this.bb_pos + offset) : 0;
}

static startNotifyEnrollNewFinger(builder:flatbuffers.Builder) {
  builder.startObject(4);
}

static addName(builder:flatbuffers.Builder, nameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, nameOffset, 0);
}

static addIndex(builder:flatbuffers.Builder, index:number) {
  builder.addFieldInt16(1, index, 0);
}

static addStep(builder:flatbuffers.Builder, step:number) {
  builder.addFieldInt8(2, step, 0);
}

static addErrorcode(builder:flatbuffers.Builder, errorcode:number) {
  builder.addFieldInt16(3, errorcode, 0);
}

static endNotifyEnrollNewFinger(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createNotifyEnrollNewFinger(builder:flatbuffers.Builder, nameOffset:flatbuffers.Offset, index:number, step:number, errorcode:number):flatbuffers.Offset {
  NotifyEnrollNewFinger.startNotifyEnrollNewFinger(builder);
  NotifyEnrollNewFinger.addName(builder, nameOffset);
  NotifyEnrollNewFinger.addIndex(builder, index);
  NotifyEnrollNewFinger.addStep(builder, step);
  NotifyEnrollNewFinger.addErrorcode(builder, errorcode);
  return NotifyEnrollNewFinger.endNotifyEnrollNewFinger(builder);
}
}
