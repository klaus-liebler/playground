// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

import { Requests, unionToRequests, unionListToRequests } from '../webmanager/requests';


export class RequestWrapper {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):RequestWrapper {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsRequestWrapper(bb:flatbuffers.ByteBuffer, obj?:RequestWrapper):RequestWrapper {
  return (obj || new RequestWrapper()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsRequestWrapper(bb:flatbuffers.ByteBuffer, obj?:RequestWrapper):RequestWrapper {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new RequestWrapper()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

requestType():Requests {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readUint8(this.bb_pos + offset) : Requests.NONE;
}

request<T extends flatbuffers.Table>(obj:any):any|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__union(obj, this.bb_pos + offset) : null;
}

static startRequestWrapper(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static addRequestType(builder:flatbuffers.Builder, requestType:Requests) {
  builder.addFieldInt8(0, requestType, Requests.NONE);
}

static addRequest(builder:flatbuffers.Builder, requestOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, requestOffset, 0);
}

static endRequestWrapper(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createRequestWrapper(builder:flatbuffers.Builder, requestType:Requests, requestOffset:flatbuffers.Offset):flatbuffers.Offset {
  RequestWrapper.startRequestWrapper(builder);
  RequestWrapper.addRequestType(builder, requestType);
  RequestWrapper.addRequest(builder, requestOffset);
  return RequestWrapper.endRequestWrapper(builder);
}
}
