// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

import { CanData } from '../webmanager/can-data';


export class NotifyCanMessage {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):NotifyCanMessage {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsNotifyCanMessage(bb:flatbuffers.ByteBuffer, obj?:NotifyCanMessage):NotifyCanMessage {
  return (obj || new NotifyCanMessage()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsNotifyCanMessage(bb:flatbuffers.ByteBuffer, obj?:NotifyCanMessage):NotifyCanMessage {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new NotifyCanMessage()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

messageId():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;
}

data(obj?:CanData):CanData|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new CanData()).__init(this.bb_pos + offset, this.bb!) : null;
}

dataLen():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readUint8(this.bb_pos + offset) : 0;
}

static startNotifyCanMessage(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static addMessageId(builder:flatbuffers.Builder, messageId:number) {
  builder.addFieldInt32(0, messageId, 0);
}

static addData(builder:flatbuffers.Builder, dataOffset:flatbuffers.Offset) {
  builder.addFieldStruct(1, dataOffset, 0);
}

static addDataLen(builder:flatbuffers.Builder, dataLen:number) {
  builder.addFieldInt8(2, dataLen, 0);
}

static endNotifyCanMessage(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

}
