// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

export class ResponseRenameFinger {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):ResponseRenameFinger {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsResponseRenameFinger(bb:flatbuffers.ByteBuffer, obj?:ResponseRenameFinger):ResponseRenameFinger {
  return (obj || new ResponseRenameFinger()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsResponseRenameFinger(bb:flatbuffers.ByteBuffer, obj?:ResponseRenameFinger):ResponseRenameFinger {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new ResponseRenameFinger()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

errorcode():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readUint16(this.bb_pos + offset) : 0;
}

static startResponseRenameFinger(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static addErrorcode(builder:flatbuffers.Builder, errorcode:number) {
  builder.addFieldInt16(0, errorcode, 0);
}

static endResponseRenameFinger(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createResponseRenameFinger(builder:flatbuffers.Builder, errorcode:number):flatbuffers.Offset {
  ResponseRenameFinger.startResponseRenameFinger(builder);
  ResponseRenameFinger.addErrorcode(builder, errorcode);
  return ResponseRenameFinger.endResponseRenameFinger(builder);
}
}
