// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

export class BooleanSetting {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):BooleanSetting {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsBooleanSetting(bb:flatbuffers.ByteBuffer, obj?:BooleanSetting):BooleanSetting {
  return (obj || new BooleanSetting()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsBooleanSetting(bb:flatbuffers.ByteBuffer, obj?:BooleanSetting):BooleanSetting {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new BooleanSetting()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

value():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

static startBooleanSetting(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static addValue(builder:flatbuffers.Builder, value:boolean) {
  builder.addFieldInt8(0, +value, +false);
}

static endBooleanSetting(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createBooleanSetting(builder:flatbuffers.Builder, value:boolean):flatbuffers.Offset {
  BooleanSetting.startBooleanSetting(builder);
  BooleanSetting.addValue(builder, value);
  return BooleanSetting.endBooleanSetting(builder);
}
}
